/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laliga;

import java.lang.reflect.Type;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;




/**
 *
 * @author usumaniana1
 */
public class equipoGUI extends javax.swing.JFrame {

    /**
     * Creates new form equipoGUI
     */
    
    private ArrayList<Equipo> almacenEquipos = new ArrayList<Equipo>();
    private String nombre;
    private int puntos, presupuesto;
    private DefaultListModel dlm = new DefaultListModel();
    private int contador = 0;
    
    URL url=null;
    
    Document doc = null;
    Element raiz = null;
    
    
    
    public equipoGUI() {
      initComponents();
      lst_equipos.setModel(dlm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem4 = new javax.swing.JCheckBoxMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txf_nombre = new javax.swing.JTextField();
        txf_puntos = new javax.swing.JTextField();
        txf_presupuesto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_equipos = new javax.swing.JList<>();
        btn_incluir = new javax.swing.JButton();
        btn_borrar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        itm_cargar = new javax.swing.JMenu();
        itm_guardar = new javax.swing.JMenuItem();
        itm_recuperar = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        itm_seriando = new javax.swing.JMenuItem();
        itm_guardarJson = new javax.swing.JMenuItem();
        itm_cargarJson = new javax.swing.JMenuItem();
        itm_guardarXML = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        itm_ordenarNombre = new javax.swing.JMenuItem();
        itm_ordenarPuntos = new javax.swing.JMenuItem();
        itm_ordenarPresupuesto = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        itm_guardarDOM = new javax.swing.JMenuItem();
        itm_cargarDOM = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        btn_persGuardar = new javax.swing.JMenuItem();
        btn_persRecuperar = new javax.swing.JMenuItem();
        btn_persGuardarTexto = new javax.swing.JMenuItem();
        btn_persRecuperarTexto = new javax.swing.JMenuItem();
        btn_persGuardarJson = new javax.swing.JMenuItem();
        btn_persRecuperarJson = new javax.swing.JMenuItem();
        btn_persGuardarXml = new javax.swing.JMenuItem();
        btn_persRecuperarXml = new javax.swing.JMenuItem();

        jMenuItem3.setText("jMenuItem3");

        jMenuItem4.setText("jMenuItem4");

        jMenuItem5.setText("jMenuItem5");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jMenuItem6.setText("jMenuItem6");

        jMenuItem7.setText("jMenuItem7");

        jMenuItem9.setText("jMenuItem9");

        jMenuItem10.setText("jMenuItem10");

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("jCheckBoxMenuItem3");

        jCheckBoxMenuItem4.setSelected(true);
        jCheckBoxMenuItem4.setText("jCheckBoxMenuItem4");

        jMenu4.setText("jMenu4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre: ");

        jLabel2.setText("Puntos: ");

        jLabel3.setText("Presupuesto: ");

        txf_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txf_nombreActionPerformed(evt);
            }
        });

        txf_presupuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txf_presupuestoActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(lst_equipos);

        btn_incluir.setText("Incluir");
        btn_incluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_incluirActionPerformed(evt);
            }
        });

        btn_borrar.setText("Borrar");
        btn_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txf_nombre)
                            .addComponent(txf_puntos)
                            .addComponent(txf_presupuesto, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                        .addGap(422, 422, 422))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_incluir, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btn_borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txf_puntos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txf_presupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_incluir)
                    .addComponent(btn_borrar))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        itm_cargar.setText("Archivo");

        itm_guardar.setText("Guardar");
        itm_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_guardarActionPerformed(evt);
            }
        });
        itm_cargar.add(itm_guardar);

        itm_recuperar.setText("Recuperar");
        itm_recuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_recuperarActionPerformed(evt);
            }
        });
        itm_cargar.add(itm_recuperar);

        jMenuItem1.setText("Cargar Seriando");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        itm_cargar.add(jMenuItem1);

        itm_seriando.setText("Guardar Seriando");
        itm_seriando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_seriandoActionPerformed(evt);
            }
        });
        itm_cargar.add(itm_seriando);

        itm_guardarJson.setText("Guardar Json");
        itm_guardarJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_guardarJsonActionPerformed(evt);
            }
        });
        itm_cargar.add(itm_guardarJson);

        itm_cargarJson.setText("Cargar Json");
        itm_cargarJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_cargarJsonActionPerformed(evt);
            }
        });
        itm_cargar.add(itm_cargarJson);

        itm_guardarXML.setText("Guardar XML");
        itm_guardarXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_guardarXMLActionPerformed(evt);
            }
        });
        itm_cargar.add(itm_guardarXML);

        jMenuBar1.add(itm_cargar);

        jMenu2.setText("Editar");

        itm_ordenarNombre.setText("Ordenar por nombre");
        itm_ordenarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_ordenarNombreActionPerformed(evt);
            }
        });
        jMenu2.add(itm_ordenarNombre);

        itm_ordenarPuntos.setText("Ordenar por puntos");
        itm_ordenarPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_ordenarPuntosActionPerformed(evt);
            }
        });
        jMenu2.add(itm_ordenarPuntos);

        itm_ordenarPresupuesto.setText("Ordenar por presupuesto");
        itm_ordenarPresupuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_ordenarPresupuestoActionPerformed(evt);
            }
        });
        jMenu2.add(itm_ordenarPresupuesto);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ver");

        jMenuItem8.setText("Zoom");
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        jMenu1.setText("DOM");

        itm_guardarDOM.setText("Guardar");
        itm_guardarDOM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_guardarDOMActionPerformed(evt);
            }
        });
        jMenu1.add(itm_guardarDOM);

        itm_cargarDOM.setText("Cargar");
        itm_cargarDOM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itm_cargarDOMActionPerformed(evt);
            }
        });
        jMenu1.add(itm_cargarDOM);

        jMenuBar1.add(jMenu1);

        jMenu5.setText("Persistencia");

        btn_persGuardar.setText("Guardar Seriando");
        btn_persGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_persGuardarActionPerformed(evt);
            }
        });
        jMenu5.add(btn_persGuardar);

        btn_persRecuperar.setText("Recuperar Seriando");
        btn_persRecuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_persRecuperarActionPerformed(evt);
            }
        });
        jMenu5.add(btn_persRecuperar);

        btn_persGuardarTexto.setText("Guardar Texto");
        btn_persGuardarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_persGuardarTextoActionPerformed(evt);
            }
        });
        jMenu5.add(btn_persGuardarTexto);

        btn_persRecuperarTexto.setText("Recuperar Texto");
        btn_persRecuperarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_persRecuperarTextoActionPerformed(evt);
            }
        });
        jMenu5.add(btn_persRecuperarTexto);

        btn_persGuardarJson.setText("Guardar Json");
        btn_persGuardarJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_persGuardarJsonActionPerformed(evt);
            }
        });
        jMenu5.add(btn_persGuardarJson);

        btn_persRecuperarJson.setText("Recuperar Json");
        btn_persRecuperarJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_persRecuperarJsonActionPerformed(evt);
            }
        });
        jMenu5.add(btn_persRecuperarJson);

        btn_persGuardarXml.setText("Guardar xml");
        btn_persGuardarXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_persGuardarXmlActionPerformed(evt);
            }
        });
        jMenu5.add(btn_persGuardarXml);

        btn_persRecuperarXml.setText("Recuperar xml");
        btn_persRecuperarXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_persRecuperarXmlActionPerformed(evt);
            }
        });
        jMenu5.add(btn_persRecuperarXml);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txf_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txf_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txf_nombreActionPerformed

    private void btn_incluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_incluirActionPerformed

        nombre = txf_nombre.getText();
        puntos = Integer.parseInt(txf_puntos.getText());
        presupuesto = Integer.parseInt(txf_presupuesto.getText());
        
        if (puntos >= 0)
        {
            Equipo e = new Equipo(nombre, puntos, presupuesto);
            dlm.addElement(e);
            
            txf_nombre.setText(null);
            txf_puntos.setText(null);
            txf_presupuesto.setText(null);
            contador++; 
        }
        else
        {
            try 
            {
                throw new EPuntosNegativos(puntos);
            } 
            catch (EPuntosNegativos ex) 
            {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                txf_puntos.setText(null);
            }
        }            
    }//GEN-LAST:event_btn_incluirActionPerformed

    private void btn_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarActionPerformed
              dlm.remove(lst_equipos.getSelectedIndex());
    }//GEN-LAST:event_btn_borrarActionPerformed

    private void txf_presupuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txf_presupuestoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txf_presupuestoActionPerformed

    private void itm_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_guardarActionPerformed
        guardarEnFicheroTexto();
    }//GEN-LAST:event_itm_guardarActionPerformed

    private void itm_recuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_recuperarActionPerformed
        recuperarEnFicheroTexto();
    }//GEN-LAST:event_itm_recuperarActionPerformed

    private void itm_ordenarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_ordenarNombreActionPerformed
        ordenarPorNombre();
    }//GEN-LAST:event_itm_ordenarNombreActionPerformed

    private void itm_ordenarPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_ordenarPuntosActionPerformed
        ordenarPorPuntos();
    }//GEN-LAST:event_itm_ordenarPuntosActionPerformed

    private void itm_ordenarPresupuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_ordenarPresupuestoActionPerformed
        ordenarPorPresupuesto();
    }//GEN-LAST:event_itm_ordenarPresupuestoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        cargarSeriando();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void itm_seriandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_seriandoActionPerformed
        guardarSeriando();
    }//GEN-LAST:event_itm_seriandoActionPerformed

    
    private void itm_guardarJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_guardarJsonActionPerformed
        
        FileWriter fw=null;
        PrintWriter pw=null;
        
        ArrayList almacen = new ArrayList<Equipo>();
        
        for (int i = 0; i < dlm.size(); i++)
        {
            Equipo e = (Equipo) dlm.get(i);
            almacen.add(e);
        }
        
        Gson gson = new Gson();
        
        String rJson = gson.toJson(almacen);
        System.out.println(rJson);
        
        try
        {
            pw = new PrintWriter(new FileWriter("fequipos.txt"));
            pw.print(rJson);
        }
        catch(IOException ex)
        {
            System.out.println(ex.getMessage());
        }
        finally
        {
            pw.close();
        }
    }//GEN-LAST:event_itm_guardarJsonActionPerformed

    private void itm_cargarJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_cargarJsonActionPerformed
        
        dlm.clear();
        
        Gson mGson = new Gson();
        
        BufferedReader br2=null;
        
        try
        {
            br2 = new BufferedReader(new FileReader("fequipos.txt"));
        }
        catch (FileNotFoundException ex)
        {
            System.out.println(ex.getMessage());
        }
        
        java.lang.reflect.Type tipoListaEquipos = new TypeToken<List<Equipo>>(){}.getType(); //LINEA IMPORTANTE
        
        List<Equipo> lequipos = mGson.fromJson(br2, tipoListaEquipos);
        
        for (Equipo e1: lequipos)
        {
            dlm.addElement(e1);
        }
    }//GEN-LAST:event_itm_cargarJsonActionPerformed

    private void itm_guardarXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_guardarXMLActionPerformed

    }//GEN-LAST:event_itm_guardarXMLActionPerformed

    private void itm_guardarDOMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_guardarDOMActionPerformed
        try
        {
            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
            
            doc = docBuilder.newDocument();
            Element rootElement = doc.createElement("LaLiga");
            doc.appendChild(rootElement);
            
            for (int i = 0; i < dlm.getSize(); i++) 
            {
                Element equipo1 = doc.createElement("Equipo");
                Equipo e = (Equipo) dlm.get(i);
                
                Element e1 = doc.createElement("nombre");
                e1.setTextContent(e.getNombre());
                equipo1.appendChild(e1);
                
                Element e2 = doc.createElement("puntos");
                e2.setTextContent(""+e.getPuntos());
                equipo1.appendChild(e2);
                
                Element e3 = doc.createElement("presupuesto");
                e3.setTextContent(""+e.getPresupuesto());
                equipo1.appendChild(e3);
                
                rootElement.appendChild(equipo1);
            }
            
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            DOMSource source = new DOMSource(doc);   

            StreamResult result = new StreamResult(new File("equipos.xml"));
            transformer.transform(source, result);
  
        }
        catch (ParserConfigurationException pce)
        {
            pce.printStackTrace();
        }
        catch (TransformerException tfe)
        {
            tfe.printStackTrace();
        }                        
    }//GEN-LAST:event_itm_guardarDOMActionPerformed

    private void itm_cargarDOMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itm_cargarDOMActionPerformed
        try {
            // 1º Creamos una nueva instancia de un fabrica de constructores de documentos.
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();

            // 2º A partir de la instancia anterior, fabricamos un constructor de documentos, que procesará el XML.
            DocumentBuilder db = dbf.newDocumentBuilder();

            // 3º Procesamos el documento (almacenado en un archivo) y lo convertimos en un árbol DOM.
            doc=db.parse("NuestrosEquipos.xml");
        } 
        catch (Exception ex) 
        {
            System.out.println("¡Error! No se ha podido cargar el documento XML.");
        }
        
        
        NodeList nl = doc.getElementsByTagName("equipo");
        Element equip;
        
        for (int i = 0; i < nl.getLength(); i++) {
            Equipo e=null;
            equip = (Element)nl.item(i);
            e = obtenerEquipo(equip);
            dlm.addElement(e);
        }
    }//GEN-LAST:event_itm_cargarDOMActionPerformed

    private void btn_persGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_persGuardarActionPerformed
        List lista = new ArrayList();
        
        for (int i = 0; i < dlm.getSize(); i++)
        {
            lista.add(dlm.get(i));
        }
        
        IPersistencia ip = new SerialConIPersistencia();
        ip.guardar(lista);
    }//GEN-LAST:event_btn_persGuardarActionPerformed

    private void btn_persRecuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_persRecuperarActionPerformed
        
        List lst = null;
        
        IPersistencia ip = new SerialConIPersistencia();
        lst = ip.recuperar();
        
        dlm.clear();
        dlm.addAll(lst);
        lst_equipos.updateUI();
    }//GEN-LAST:event_btn_persRecuperarActionPerformed

    private void btn_persGuardarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_persGuardarTextoActionPerformed
        
        List lista = new ArrayList();
        
        for (int i = 0; i < dlm.getSize(); i++)
        {
            lista.add(dlm.get(i));
        }
        
        IPersistencia ip = new TextoConIPersistencia();
        ip.guardar(lista);
    }//GEN-LAST:event_btn_persGuardarTextoActionPerformed

    private void btn_persRecuperarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_persRecuperarTextoActionPerformed
        
        List lst = null;
        
        IPersistencia ip = new TextoConIPersistencia();
        lst = ip.recuperar();
        
        dlm.clear();
        dlm.addAll(lst);
        lst_equipos.updateUI();
        
    }//GEN-LAST:event_btn_persRecuperarTextoActionPerformed

    private void btn_persGuardarJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_persGuardarJsonActionPerformed
        
        List lista = new ArrayList();
        
        for (int i = 0; i < dlm.getSize(); i++)
        {
            lista.add(dlm.get(i));
        }
        
        IPersistencia ip = new JsonConIPersistencia();
        ip.guardar(lista);
    }//GEN-LAST:event_btn_persGuardarJsonActionPerformed

    private void btn_persRecuperarJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_persRecuperarJsonActionPerformed
        
        List lst = null;
        
        IPersistencia ip = new JsonConIPersistencia();
        lst = ip.recuperar();
        
        dlm.clear();
        dlm.addAll(lst);
        lst_equipos.updateUI();        
    }//GEN-LAST:event_btn_persRecuperarJsonActionPerformed

    private void btn_persRecuperarXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_persRecuperarXmlActionPerformed
        List lista = new ArrayList();
        
        for (int i = 0; i < dlm.getSize(); i++)
        {
            lista.add(dlm.get(i));
        }
        
        IPersistencia ip = new XmlConIPersistencia();
        ip.guardar(lista);
    }//GEN-LAST:event_btn_persRecuperarXmlActionPerformed

    private void btn_persGuardarXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_persGuardarXmlActionPerformed
        List lst = null;
        
        IPersistencia ip = new XmlConIPersistencia();
        lst = ip.recuperar();
        
        dlm.clear();
        dlm.addAll(lst);
        lst_equipos.updateUI();
    }//GEN-LAST:event_btn_persGuardarXmlActionPerformed
    
    
    public Equipo obtenerEquipo(Element e)
    {
        String nombre, puntos, presupuesto;
        int ipuntos, ipresupuesto;
        Element el;
        NodeList lista;
        Equipo eequipo;
        

        lista = e.getElementsByTagName("nombre");
        el = (Element)lista.item(0);
        nombre = el.getTextContent();
        

        lista = e.getElementsByTagName("puntos");
        el = (Element)lista.item(0);
        puntos = el.getTextContent();
        ipuntos = Integer.parseInt(puntos);
        

        lista = e.getElementsByTagName("presupuesto");
        el = (Element)lista.item(0);
        presupuesto = el.getTextContent();
        ipresupuesto = Integer.parseInt(presupuesto);
        
        
        eequipo = new Equipo(nombre, ipuntos, ipresupuesto);
        return eequipo;  
    }   
    
    
    public void guardarEnFicheroTexto()
    {
        FileWriter fw=null;
        PrintWriter pw=null;
        
        JFileChooser fileChooser =  new JFileChooser("./");
        int seleccion = fileChooser.showSaveDialog(this);
        File f;
        
        if (seleccion == JFileChooser.APPROVE_OPTION)
        {
            f = fileChooser.getSelectedFile();
        
            try
            {
                fw = new FileWriter(f);
                pw = new PrintWriter(fw);

                for(int i=0;i<dlm.getSize();i++)
                {
                    Equipo e = (Equipo) dlm.get(i);
                    pw.println(e.getNombre()+","+e.getPuntos()+","+e.getPresupuesto());
                }
            }
            catch(IOException ex)
            {
                Logger.getLogger(equipoGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try
                {
                    fw.close();
                }
                catch(Exception e2)
                {
                    e2.printStackTrace();
                }
            }
        }
    }
    
    public void ordenarPorNombre()
    {
        Equipo[] w = new Equipo[dlm.size()];
        dlm.copyInto(w);
        dlm.clear();
        Arrays.sort(w);
        
        for(int i=0; i<w.length;i++)
        {
            dlm.addElement(w[i]);
        }
        
        lst_equipos.updateUI();
    }
    
    public void ordenarPorPuntos()
    {
        Equipo[] w = new Equipo[dlm.size()];
        dlm.copyInto(w);
        dlm.clear();
        Arrays.sort(w, new OrdenarPorPuntos());
        
        for(int i=0; i<w.length;i++)
        {
            dlm.addElement(w[i]);
        }
        
        lst_equipos.updateUI();
    }
    
    public void ordenarPorPresupuesto()
    {
        Equipo[] w = new Equipo[dlm.size()];
        dlm.copyInto(w);
        dlm.clear();
        Arrays.sort(w, new OrdenarPorPresupuesto());
        
        for(int i=0; i<w.length;i++)
        {
            dlm.addElement(w[i]);
        }
        
        lst_equipos.updateUI();
    }
    
    public void recuperarEnFicheroTexto()
    {
        FileReader fr=null;
        BufferedReader br=null;
        String linea =null;
        String []trozos;
        dlm.clear();
        
        JFileChooser fileChooser = new JFileChooser("./");
        int seleccion = fileChooser.showOpenDialog(this);
        
        File f;
        
        if (seleccion == JFileChooser.APPROVE_OPTION)
        {
            f = fileChooser.getSelectedFile();
        
            try
            {
                fr = new FileReader(f);
                br = new BufferedReader(fr);

                while((linea = br.readLine())!=null)
                {
                    trozos = linea.split(",");
                    Equipo e = new Equipo(trozos[0],Integer.parseInt(trozos[1].trim()),Integer.parseInt(trozos[2].trim()));
                    dlm.addElement(e);

                    lst_equipos.setModel(dlm);
                    lst_equipos.updateUI();
                }
            }
            catch(FileNotFoundException ex)
            {
                System.out.println(ex.getMessage());
            }
            catch(IOException ex)
            {
                System.out.println(ex.getMessage());
            }
            finally
            {
                try
                {
                    fr.close();
                }
                catch(Exception ex)
                {
                    ex.printStackTrace();
                }
            }
        }
    }
    
    public void cargarSeriando()
    {
        JFileChooser fileChooser = new JFileChooser("./");
        int seleccion = fileChooser.showOpenDialog(this);
        File f; 
        
        if (seleccion == JFileChooser.APPROVE_OPTION)
        {
            f = fileChooser.getSelectedFile();
            try
            {  
                FileInputStream fis = new FileInputStream("fEquiposS.dat");
                ObjectInputStream ois = new ObjectInputStream(fis);


                dlm=((DefaultListModel)ois.readObject());
                lst_equipos.setModel(dlm);
                lst_equipos.updateUI();

            } 
            catch (FileNotFoundException ex) 
            {
                Logger.getLogger(equipoGUI.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (IOException ex) 
            {
                Logger.getLogger(equipoGUI.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (ClassNotFoundException ex) 
            {
                Logger.getLogger(equipoGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public void guardarSeriando()
    {
        
        JFileChooser fileChooser =  new JFileChooser("./");
        int seleccion = fileChooser.showSaveDialog(this);
        File f;
        
        if (seleccion == JFileChooser.APPROVE_OPTION)
        {
            f = fileChooser.getSelectedFile();
            try 
            {

                FileOutputStream fos = new FileOutputStream(f);
                ObjectOutputStream oos = new ObjectOutputStream(fos);

                oos.writeObject(dlm);

            } 
            catch (FileNotFoundException ex) 
            {
                Logger.getLogger(equipoGUI.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (IOException ex) 
            {
                Logger.getLogger(equipoGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(equipoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(equipoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(equipoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(equipoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new equipoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_borrar;
    private javax.swing.JButton btn_incluir;
    private javax.swing.JMenuItem btn_persGuardar;
    private javax.swing.JMenuItem btn_persGuardarJson;
    private javax.swing.JMenuItem btn_persGuardarTexto;
    private javax.swing.JMenuItem btn_persGuardarXml;
    private javax.swing.JMenuItem btn_persRecuperar;
    private javax.swing.JMenuItem btn_persRecuperarJson;
    private javax.swing.JMenuItem btn_persRecuperarTexto;
    private javax.swing.JMenuItem btn_persRecuperarXml;
    private javax.swing.JMenu itm_cargar;
    private javax.swing.JMenuItem itm_cargarDOM;
    private javax.swing.JMenuItem itm_cargarJson;
    private javax.swing.JMenuItem itm_guardar;
    private javax.swing.JMenuItem itm_guardarDOM;
    private javax.swing.JMenuItem itm_guardarJson;
    private javax.swing.JMenuItem itm_guardarXML;
    private javax.swing.JMenuItem itm_ordenarNombre;
    private javax.swing.JMenuItem itm_ordenarPresupuesto;
    private javax.swing.JMenuItem itm_ordenarPuntos;
    private javax.swing.JMenuItem itm_recuperar;
    private javax.swing.JMenuItem itm_seriando;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lst_equipos;
    private javax.swing.JTextField txf_nombre;
    private javax.swing.JTextField txf_presupuesto;
    private javax.swing.JTextField txf_puntos;
    // End of variables declaration//GEN-END:variables
}
