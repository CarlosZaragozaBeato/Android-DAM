/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package infantesdavid;

import java.io.File;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

/**
 *
 * @author usumaniana1
 */
public class ciclistasGUI extends javax.swing.JFrame implements IAntidopaje {

    
    private DefaultListModel dlmHombres = new DefaultListModel();
    private DefaultListModel dlmMujeres = new DefaultListModel();
    private DefaultListModel dlmSancionados = new DefaultListModel();
    private DefaultListModel dlmEquipos = new DefaultListModel();
    private DefaultListModel dlmMixtos = new DefaultListModel();
    
    private int contador;
    
    Document doc = null;
    Element raiz = null;
    
    ArrayList array = new ArrayList();
    
    /**
     * Creates new form ciclistasGUI
     */
    public ciclistasGUI() {
        initComponents();
        lst_ciclistasHombre.setModel(dlmHombres);
        lst_ciclistasMujeres.setModel(dlmMujeres);
        lst_ciclistasSancionados.setModel(dlmSancionados);
        lst_equipos.setModel(dlmEquipos);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_ciclistasHombre = new javax.swing.JList<>();
        btn_cambiarAMujer = new javax.swing.JButton();
        btn_cambiarAHombre = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lst_ciclistasMujeres = new javax.swing.JList<>();
        btn_leer = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lst_ciclistasSancionados = new javax.swing.JList<>();
        btn_dopaje = new javax.swing.JButton();
        btn_guardar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lst_equipos = new javax.swing.JList<>();
        txf_masSancionados = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jLabel2.setText("Ciclistas Hombre");

        jScrollPane1.setViewportView(lst_ciclistasHombre);

        btn_cambiarAMujer.setText("Cambiar a mujer");
        btn_cambiarAMujer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cambiarAMujerActionPerformed(evt);
            }
        });

        btn_cambiarAHombre.setText("Cambiar a hombre");
        btn_cambiarAHombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cambiarAHombreActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jLabel1.setText("Ciclistas Mujeres");

        jScrollPane2.setViewportView(lst_ciclistasMujeres);

        btn_leer.setText("Leer y crear ciclistas");
        btn_leer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_leerActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jLabel3.setText("Ciclistas sancionados");

        jScrollPane3.setViewportView(lst_ciclistasSancionados);

        btn_dopaje.setText("Control de dopaje");
        btn_dopaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dopajeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jLabel2)
                .addGap(332, 332, 332)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(138, 138, 138))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_cambiarAHombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_cambiarAMujer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_leer, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(143, 143, 143)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_dopaje)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btn_cambiarAMujer)
                        .addGap(29, 29, 29)
                        .addComponent(btn_cambiarAHombre))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_dopaje)
                    .addComponent(btn_leer)))
        );

        btn_guardar.setText("Guardar datos");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jLabel4.setText("Equipos existentes");

        jScrollPane4.setViewportView(lst_equipos);

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jLabel5.setText("Equipo con mas sancionados");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel4)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txf_masSancionados, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(27, Short.MAX_VALUE))))
            .addComponent(btn_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txf_masSancionados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(31, 31, 31)
                .addComponent(btn_guardar)
                .addGap(0, 40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_leerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_leerActionPerformed
        
        dlmHombres.removeAllElements();
        dlmMujeres.removeAllElements();
        
        try 
        {            
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = dbf.newDocumentBuilder();
            
            doc = db.parse("ciclistas.xml");
            raiz = doc.getDocumentElement();
            
            NodeList nl = doc.getElementsByTagName("ciclista");
            Element ciclista = null;
            
                       
            for (int i = 0; i < nl.getLength(); i++) {

                Ciclista c = null;
                ciclista = (Element) nl.item(i);
                c = obtenerCiclista(ciclista);
                
                if (c.getSexo().equals("Hombre"))
                {
                    dlmHombres.addElement(c);
                    
                    if (dlmEquipos.contains(c.getEquipo()))
                    {
                        
                    }
                    else
                    {
                        dlmEquipos.addElement(c.getEquipo()); 
                    }                                                    
                }
                else
                {
                    dlmMujeres.addElement(c);
                    if (dlmEquipos.contains(c.getEquipo()))
                    {
                         
                    }
                    else
                    {
                         dlmEquipos.addElement(c.getEquipo());
                    }                   
                }               
            }
        }
        catch(Exception ex)
        {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btn_leerActionPerformed

    
    private void btn_cambiarAMujerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cambiarAMujerActionPerformed
        Ciclista c = (Ciclista) dlmHombres.getElementAt(lst_ciclistasHombre.getSelectedIndex());
        
        c.setSexo("Mujer");
        dlmMujeres.addElement(c);
        dlmHombres.removeElement(c);
        
        lst_ciclistasMujeres.updateUI();
        lst_ciclistasHombre.updateUI();
    }//GEN-LAST:event_btn_cambiarAMujerActionPerformed

    private void btn_cambiarAHombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cambiarAHombreActionPerformed
        Ciclista c = (Ciclista) dlmMujeres.getElementAt(lst_ciclistasMujeres.getSelectedIndex());
        
        c.setSexo("Hombre");
        dlmHombres.addElement(c);
        dlmMujeres.removeElement(c);
        
        lst_ciclistasMujeres.updateUI();
        lst_ciclistasHombre.updateUI();
    }//GEN-LAST:event_btn_cambiarAHombreActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        guardarHombreXML();
        guardarMujerXML();
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_dopajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dopajeActionPerformed
        
    sancionarPorHMT();
    sancionarEquipos();
        
           
    }//GEN-LAST:event_btn_dopajeActionPerformed

    
    public void sancionarPorHMT(){
            for (int i = 0; i < dlmHombres.getSize(); i++) 
        {
            Ciclista c = (Ciclista) dlmHombres.get(i);
            array.add(c);
        }
        
        for (int i = 0; i < dlmMujeres.getSize(); i++) 
        {
            Ciclista c = (Ciclista) dlmMujeres.get(i);
            array.add(c);
        }
              
        LinkedList lst = new LinkedList();
        lst = sancionarPorHematocrito(array);
        dlmSancionados.addAll(lst);
                
        lst_ciclistasSancionados.updateUI();
    }
    
    public void sancionarEquipos(){
           int cont=0,max = 0;
            String equipo = null;
        
        for (int i = 0; i < dlmEquipos.size(); i++) 
        {
            String e = (String) dlmEquipos.get(i);
  
            
            for (int j = 0; j < array.size(); j++) 
            {
                Ciclista c = (Ciclista) array.get(i);
                
                if (e.equals(c.getEquipo()))
                {
                    for (int k = 0; k < dlmSancionados.getSize(); k++) 
                    {
                        CiclistaSancionado cs = (CiclistaSancionado) dlmSancionados.get(k);
                        
                        if (c.getNombre().equals(cs.getNombre()))
                        {
                            cont++;
                        }
                    }
                    
                    if (cont > max)
                    {
                        max = cont;
                        equipo = e;
                    }
                 
                }
                
            }
     
        }       
        txf_masSancionados.setText(equipo);  
        
    }
        
    
    public void guardarHombreXML()
    {
        try
        {
            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
            
            doc = docBuilder.newDocument();
            Element rootElement = doc.createElement("Ciclistas_Hombres");
            doc.appendChild(rootElement);
            
            for (int i = 0; i < dlmHombres.getSize(); i++) 
            {
                Element ciclista1 = doc.createElement("Ciclista");
                Ciclista c = (Ciclista) dlmHombres.get(i);
                
                Element c1 = doc.createElement("nombre");
                c1.setTextContent(c.getNombre());
                ciclista1.appendChild(c1);
                
                Element c2 = doc.createElement("equipo");
                c2.setTextContent(c.getEquipo());
                ciclista1.appendChild(c2);
                
                Element c3 = doc.createElement("hematocrito");
                c3.setTextContent(""+c.getHematocrito());
                ciclista1.appendChild(c3);
                
                Element c4 = doc.createElement("sexo");
                c4.setTextContent(c.getSexo());
                ciclista1.appendChild(c4);
                
                rootElement.appendChild(ciclista1);           
            }
            
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            DOMSource source = new DOMSource(doc);   

            StreamResult result = new StreamResult(new File("ciclistas_hombre.xml"));
            transformer.transform(source, result);  
        }
        catch (ParserConfigurationException pce)
        {
            pce.printStackTrace();
        }
        catch (TransformerException tfe)
        {
            tfe.printStackTrace();
        }
    }
    
    public void guardarMujerXML()
    {
        try
        {
            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
            
            doc = docBuilder.newDocument();
            Element rootElement = doc.createElement("Ciclistas_Mujeres");
            doc.appendChild(rootElement);
            
            for (int i = 0; i < dlmMujeres.getSize(); i++) 
            {
                Element ciclista1 = doc.createElement("Ciclista");
                Ciclista c = (Ciclista) dlmMujeres.get(i);
                
                Element c1 = doc.createElement("nombre");
                c1.setTextContent(c.getNombre());
                ciclista1.appendChild(c1);
                
                Element c2 = doc.createElement("equipo");
                c2.setTextContent(c.getEquipo());
                ciclista1.appendChild(c2);
                
                Element c3 = doc.createElement("hematocrito");
                c3.setTextContent(""+c.getHematocrito());
                ciclista1.appendChild(c3);
                
                Element c4 = doc.createElement("sexo");
                c4.setTextContent(c.getSexo());
                ciclista1.appendChild(c4);
                
                rootElement.appendChild(ciclista1);           
            }
            
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            DOMSource source = new DOMSource(doc);   

            StreamResult result = new StreamResult(new File("ciclistas_mujeres.xml"));
            transformer.transform(source, result);  
        }
        catch (ParserConfigurationException pce)
        {
            pce.printStackTrace();
        }
        catch (TransformerException tfe)
        {
            tfe.printStackTrace();
        }
    }
    
    public Ciclista obtenerCiclista(Element cic)
    {
        Ciclista c = null;
        String nombre, equipo, sexo, hematocrito;
        int ihematocrito;
        NodeList lista = null;
        Element el;
        
        lista = cic.getElementsByTagName("nombre");
        el = (Element) lista.item(0);
        nombre = el.getTextContent();
        
        lista = cic.getElementsByTagName("equipo");
        el = (Element) lista.item(0);
        equipo = el.getTextContent();
        
        lista = cic.getElementsByTagName("sexo");
        el = (Element) lista.item(0);
        sexo = el.getTextContent();
        
        lista = cic.getElementsByTagName("hematocrito");
        el = (Element) lista.item(0);
        hematocrito = el.getTextContent();
        ihematocrito = Integer.parseInt(hematocrito);
        
        
        c = new Ciclista(nombre, equipo, sexo, ihematocrito);
        
        return c;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ciclistasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ciclistasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ciclistasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ciclistasGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ciclistasGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cambiarAHombre;
    private javax.swing.JButton btn_cambiarAMujer;
    private javax.swing.JButton btn_dopaje;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_leer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> lst_ciclistasHombre;
    private javax.swing.JList<String> lst_ciclistasMujeres;
    private javax.swing.JList<String> lst_ciclistasSancionados;
    private javax.swing.JList<String> lst_equipos;
    private javax.swing.JTextField txf_masSancionados;
    // End of variables declaration//GEN-END:variables

    @Override
    public LinkedList sancionarPorHematocrito(List lista) 
    {        
        LinkedList lst = new LinkedList();
        for (int i = 0; i < lista.size(); i++) 
        {
            Ciclista c =  (Ciclista) lista.get(i);
                      
            if (c.getHematocrito() > 50)
            {
                CiclistaSancionado c1 = new CiclistaSancionado(c.getNombre(), "Retirada de licencia por hematocrito");
                lst.add(c1);                
            }            
        }
        return lst;
    }
}
